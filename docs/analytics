# Ultra Client Side Analytics SDK Documentation

## Overview

This part of SDK helps developers send user generated events to Ultra Platform.

## Category - Travel

### Add the dependency
For adding dependency in node environment, import the SDK from fk-platform-sdk/analytics
```js
import {Travel} from "fk-platform-sdk/analytics";
```
Alternatively, if you are using webview only you can also include the following script directly inside a `<script>` tag:
```js
https://img1a.flixcart.com/linchpin-web/fk-platform-sdk/analytics-min@1.0.3-analytics-sdk.js
```

### Create Event Object
After importing SDK, we can create event object of type, Search/Select/Proceed to Pay.

#### Search Event
Search event should be sent from the screen where user searches for flight/bus/hotel. 
##### For react native
```js
const search = new Travel.Search("BLR", ["DEL"], [new Date()], false, 1);
```
##### For webview
```js
const search = FKEvents.Travel.Search("BLR", ["DEL"], [new  Date()], false, 1);
```
Create a search object by passing following arguments
1.	Source location: string
	Source location will be city name for Bus, location of hotel in case of hotels and should be International airport code for flight category.
2.	Destination location: string[]
	This array should contain destination location for flights/bus. Incase there are intermediate locations they should came in same array in order.
	This field can be empty for hotel booking.
3.	Date: Date[]
	This will contain array of dates for multi city travel. For hotel booking this will be start and end date of hotel reservation.
4.	RoundTrip: boolean
	True if it is a round trip
5. Traveller Count: number

### Sending the event
Finally push the event using analytics module from FKPlatform. If the event is invalid then an error level log will be printed on console describing the issue with the event.
```js
fkPlatform.getModuleHelper().getAnalyticsModule().pushEvent(search);
```

#### Select Event
Select event should be sent when user clicks and selects any flight/bus/hotel from the list.

**Sample**
```js
const select = new Travel.Select(Travel.Select("6E135","FLIGHT_DOMESTIC",3500);
```
Following are the arguments for Select
1.	Name: string
	This will be flight name/hotel name or name of Bus operator
2.	Category: string
	It should have one of the following values,
	FLIGHT_INTERNATIONAL, FLIGHT_DOMESTIC, HOTEL_INTERNATIONAL, 	HOTEL_DOMESTIC, BUS
3.	Price: number
	Price of the product selected in Rupees.

#### Proceed To Pay Event

Proceed to pay event should be sent when users completes the selection and is proceeding to the payment screen
**Sample**
```js
const pay = new Travel.ProceedToPay(3760, 0, 350, 0);
```
Following are the arguments for Proceed to pay event. All the values passed will be in Rupees and accepts decimal number.
1.	Cost of Product: number
2.	(Optional)Offer Amount: number
3.	(Optional)Booking Charge: number
4.	(Optional)Value added service charge: number
